file ./build/quark.test
echo Welcome to librcd debugging mode!\n

# Enables GDB to detect threads as they are started.
break lwt_physical_executor_thread if 0

# We use SIGUSR1 to detect new threads.
handle SIGUSR1 nostop print pass

# Realtime signal 33 is used for canceling threads - don't catch it.
handle SIG33 nostop noprint pass

# Stop if the application throws SIGABRT (e.g. in abort())
handle SIGABRT stop print nopass

# Following the __releasestack logic when stepping out of a function is rarely interesting. This quickly skips over that part.
define bs
    tbreak setjmp.s:113
    commands
    silent
        step
    end
    cont
end

# Replacement for printing backtraces in segmented stack contexts as gdb does not understand those at all.
define bt
    echo
    set $_backtrace_rbp = $rbp
    call lwt_debug_dump_backtrace($_backtrace_rbp, $rip)
end

# Shorter command for dumping all fibers.
define bf
    echo
    call lwt_debug_dump_all_fibers()
end

###### ADDITIONAL DEBUG COMMANDS START ######

# We can't handle SIGSEGV in programs that use acid.
# They can be thrown 1000s of times per second.
handle SIGSEGV nostop noprint pass

# Hack that catches any unhandled SIGSEGV with GDB and restores
# to debuggable context by stepping out of signal handler.
# This is extremely fragile and will break any time rsig.c/h changes.
break rsig.c:197
commands
silent
	echo [GDB] unhandled SIGSEGV caught, returning to context\n
	return
	stepi 5
end

run

###### ADDITIONAL DEBUG COMMANDS STOP ######
